defaults:
  config_setup:
    spack_commands:
      # install newer gcc with nvptx and cuda
      - '/bin/bash  {{DEPLOY_ROOTPATH}}/config/gcc/nvptx_10.2/build.sh {{DEPLOY_PARENT_PARENT_ROOTPATH}}/generated_envs/{{ defaults.spack_version }}_{{DEPLOY_WORKNAME}}/nvptx_10.2'
      #- 'export SYS_COMPILER_SPEC=$(spack-python {{DEPLOY_ROOTPATH}}/scripts/get_sys_compiler_spec.py); spack spec -I gcc@10.2.0%${SYS_COMPILER_SPEC} +nvptx ~bootstrap '
      #- 'export SYS_COMPILER_SPEC=$(spack-python {{DEPLOY_ROOTPATH}}/scripts/get_sys_compiler_spec.py); spack install gcc@10.2.0%${SYS_COMPILER_SPEC} +nvptx ~bootstrap '
      # mark cuda dependency as explicit
      #- 'spack mark --explicit cuda'

      # map new gcc compiler, from now it will be the default gcc compiler
      - 'export DEPLOY_GCC_PREFIX=$(spack-python {{DEPLOY_ROOTPATH}}/scripts/select_spec.py --tplfile prefix_tpl.yaml --add gcc@10.2.0); spack compiler find --scope site $DEPLOY_GCC_PREFIX'
      # thi is a more robust equivalent of former spack location that fail when multiple spec are present ( like two spack versions sharing same install tree
      #- 'export DEPLOY_GCC_PREFIX=$(spack location -i gcc@10.2.0); spack compiler find --scope site $DEPLOY_GCC_PREFIX'

      # define cuda as external
      - 'spack-python {{DEPLOY_ROOTPATH}}/scripts/select_spec.py --tplfile external_tpl.yaml  --outfile {{DEPLOY_PARENT_PARENT_ROOTPATH}}/generated_envs/{{ defaults.spack_version }}_{{DEPLOY_WORKNAME}}/config_external_cuda.yaml --header packages: --add cuda' 
      - 'spack config  --scope site add -f {{DEPLOY_PARENT_PARENT_ROOTPATH}}/generated_envs/{{ defaults.spack_version }}_{{DEPLOY_WORKNAME}}/config_external_cuda.yaml'

      #- '/bin/bash {{DEPLOY_ROOTPATH}}/scripts/add_external.sh gcc@10.2.0 autoconf automake cmake cuda'
      #- '/bin/bash {{DEPLOY_ROOTPATH}}/scripts/add_external.sh oneapi cuda'
      #- '/bin/bash {{DEPLOY_ROOTPATH}}/scripts/add_external.sh intel cuda'
      #- '/bin/bash {{DEPLOY_ROOTPATH}}/scripts/add_external.sh gcc@10.2.0 cuda'
      #- '/bin/bash {{DEPLOY_ROOTPATH}}/scripts/add_external.sh nvhpc cuda'

      # generate environments
      - '{{DEPLOY_ROOTPATH}}/envs/build.sh serial {{DEPLOY_PARENT_PARENT_ROOTPATH}}/generated_envs/{{ defaults.spack_version }}_{{DEPLOY_WORKNAME}} gcc openblas netlib-xblas netlib-lapack'
      - '{{DEPLOY_ROOTPATH}}/envs/build.sh mpi {{DEPLOY_PARENT_PARENT_ROOTPATH}}/generated_envs/{{ defaults.spack_version }}_{{DEPLOY_WORKNAME}} gcc openmpi netlib-scalapack netlib-lapack'

