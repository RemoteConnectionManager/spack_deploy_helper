# this is


defaults:
  debug : 'info'
  cache : '../cache'
  linkcache : '../../cache'
  install : '../install'
  linkinstall : '../../install'
  dry_run : 'False'
  integration : 'False'
  do_update : 'False'
  clearconfig : 'False'
  platformconfig : 'False'
  runconfig : 'False'
  origin :
    url : 'https://github.com/RemoteConnectionManager/spack.git'
    master : 'develop'
    branches :
      - 'clean/develop'
    pull_flags :
      - 'ff-only'
  upstream :
    url : 'https://github.com/LLNL/spack.git'
    master : 'develop'
    prs : []

argparse:

  common:
    debug:
      action: 'store'
      default: "{{ defaults.debug }}"
      help: 'debug level: info,warning,error,debug'
    dry_run:
      action: 'store_true'
      help: 'do not perform any action'
      default: "{{ defaults.dry_run }}"

  subparser:

    workspace:
      git_deploy:
        origin:
          action: 'store'
          default: "{{ defaults.origin.url }}"
          help: 'URL of the origin git repo being cloned.'
        upstream:
          action: 'store'
          default: "{{ defaults.upstream.url }}"
          help: 'URL of the upstream git repo.'
        origin_master:
          action: 'store'
          default: "{{ defaults.origin.master }}"
          help: 'name of the branch that will be created.'
        upstream_master :
          action: 'store'
          default: "{{ defaults.upstream.master }}"
          help: 'upstream branch to sync with.'
        branches :
          action: 'store'
          help: 'Regular expressions of origin branches to fetch.  The first one specified will be checked out.'
          default : '{{ defaults.origin.branches }}'
        prlist :
          action: 'store'
          help: 'Regular expressions of upstream pr to fetch and merge.'
          default : '{{ defaults.upstream.prs }}'
        pull_flags :
          action: 'store'
          help: 'flags to use when pull.'
          default : "{{ defaults.origin.pull_flags }}"
        do_update :
          action: 'store_true'
          default : '{{ defaults.do_update }}'
          help: 'update existing checkout'
        integration :
          action: 'store_true'
          default : "{{ defaults.integration }}"
          help : 'do upstream integration'

    config:
      cache:
        action: 'store'
        default: "{{ defaults.cache }}"
        help: 'folder where cache is'
      linkcache:
        action: 'store'
        default: "{{ defaults.linkcache }}"
        help: 'existing folder to link cache to'
      install:
        action: 'store'
        default: "{{ defaults.install }}"
        help: 'folder where install packages, if start with / considered absolute, otherwise considered relative to dest'
      linkinstall:
        action: 'store'
        default: "{{ defaults.linkinstall }}"
        help: 'existing install folder to sym link from into actual install'
      clearconfig :
        action: 'store_true'
        default : "{{ defaults.clearconfig }}"
        help: 'clear existing spack configurations'
      platformconfig :
        action: 'store_true'
        default : "{{ defaults.platformconfig }}"
        help: 'search for host platform specific configuration'
      runconfig :
        action: 'store_true'
        default : "{{ defaults.runconfig }}"
        help: 'run config.sh files present in config folders'



configurations:
  base_folder : 'recipes'
  host_folder : 'hosts'
  config_dir : 'config'
  spack_yaml_files :
    - 'packages.yaml'
    - 'modules.yaml'
    - 'compilers.yaml'
    - 'config.yaml'
  host_tags :
    galileo : 'galileo'
    eni : 'eni'
    calori : 'ws_mint'
    marconi : 'marconi'
    davide : 'davide'

build:
  build_folder : build


logging_configs:
  version: 1
  disable_existing_loggers: False

  formatters:
    short:
      format: "#ooo%(levelname)-5s %(name)s[#%(message)s"
    base:
      format: "[%(levelname)-5s %(name)s # %(pathname)s:%(lineno)s] %(message)s"
    long:
      format: "[%(filename)s:%(lineno)s - %(funcName)20s() %(asctime)s] %(message)s"
  handlers:
    console:
      class: logging.StreamHandler
      level: DEBUG
      formatter: base
      stream: ext://sys.stdout
  loggers:
    '':
      # other configuration for logger 'foo.bar.baz'
      handlers: [console]
      level: INFO
    root:
      level: INFO
      handlers: [console]
      propagate: False
    cascade_yaml_config:
      level: WARNING
      handlers: [console]
      propagate: False
    workspace:
      level: WARNING
      handlers: [console]
      propagate: False
    utils.external.hiyapyco:
      handlers: [console]
      level: INFO
      propagate: False
    external.hiyapyco:
      handlers: [console]
      level: INFO
      propagate: False
    __main__:
      handlers: [console]
      level: INFO
      propagate: False
