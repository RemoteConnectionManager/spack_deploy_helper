# these are the definitions of the possible arguments

args:
  debug:
    action: 'store'
    default: "{{ defaults.debug }}"
    help: 'debug level: info,warning,error,debug'
  cache:
    action: 'store'
    default: "{{ defaults.cache }}"
    help: 'folder where cache is'
  install:
    action: 'store'
    default: "{{ defaults.install }}"
    help: 'folder where install packages, if start with / considered absolute, otherwise considered relative to dest'
  origin:
    action: 'store'
    default: "{{ defaults.origin.url }}"
    help: 'URL of the origin git repo being cloned.'
  upstream:
    action: 'store'
    default: "{{ defaults.upstream.url }}"
    help: 'URL of the upstream git repo.'
  master:
    action: 'store'
    default: "{{ defaults.origin.master }}"
    help: 'name of the branch that will be created.'
  upstream_master :
    action: 'store'
    default: "{{ defaults.upstream.master }}"
    help: 'upstream branch to sync with.'
  branches :
    action: 'store'
    help: 'Regular expressions of origin branches to fetch.  The first one specified will be checked out.'
    default : '{{ defaults.origin.branches }}'
  prlist :
    action: 'store'
    help: 'Regular expressions of upstream pr to fetch and merge.'
    default : '{{ defaults.upstream.prs }}'
  pull_flags :
    action: 'store'
    help: 'flags to use when pull.'
    default : "{{ defaults.origin.pull_flags }}"
  dry_run :
    action: 'store_true'
    help: 'do not perform any action'
    default : "{{ defaults.dry_run }}"
  do_update :
    action: 'store_true'
    default : '{{ defaults.do_update }}'
    help: 'update existing checkout'
  integration :
    action: 'store_true'
    default : "{{ defaults.integration }}"
    help : 'do upstream integration'
  clearconfig :
    action: 'store_true'
    default : "{{ defaults.clearconfig }}"
    help: 'clear existing spack configurations'
  platformconfig :
    action: 'store_true'
    default : "{{ defaults.platformconfig }}"
    help: 'search for host platform specific configuration'
  runconfig :
    action: 'store_true'
    default : "{{ defaults.runconfig }}"
    help: 'run config.sh files present in config folders'


