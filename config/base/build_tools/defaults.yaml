defaults:
  config_setup:
    spack_commands:
      # build gnu build tools
      # Create a temporary enviroment folder to assemble build tools
      #
      # start the build scipt with output folder inside generated_envs
      - '/bin/bash  {{DEPLOY_ROOTPATH}}/config/base/build_tools/build.sh {{DEPLOY_PARENT_PARENT_ROOTPATH}}/generated_envs/{{ defaults.spack_version }}_{{DEPLOY_WORKNAME}}/build_tools'
      #- " export ENVDIR=$(spack-python -c 'import tempfile; print(tempfile.mkdtemp())'); spack-python {{DEPLOY_ROOTPATH}}/config/base/build_tools/generate_env.py {{DEPLOY_ROOTPATH}}/config/base/build_tools/spack.yaml ${ENVDIR}/spack.yaml; spack env activate -d ${ENVDIR}; spack concretize -f; spack install; spack env deactivate"
      #- 'mkdir -p {{DEPLOY_PARENT_PARENT_ROOTPATH}}/generated_envs/{{ defaults.spack_version }}_{{DEPLOY_WORKNAME}}/build_tools'
      # configure a spack.yaml template for the temp environment
      #- 'spack-python {{DEPLOY_ROOTPATH}}/scripts/select_spec.py --external  openssl --tplfile {{DEPLOY_ROOTPATH}}/config/base/build_tools/spack.yaml ${TMPDIR}/spack_temp_env/spack.yaml --outfile {{DEPLOY_PARENT_PARENT_ROOTPATH}}/generated_envs/{{ defaults.spack_version }}_{{DEPLOY_WORKNAME}}/build_tools/spack.yaml'
      #- "spack-python -c \"import sys; import string; substitutions={'GCC_VER' : str(sorted([ s.version for s in spack.compilers.all_compiler_specs() if 'gcc' in str(s) ])[0]), 'SYS_OPENSSL_VER' : spack.config.get('packages')['openssl']['externals'][0]['spec'].split('@')[1]}; [sys.stdout.write(string.Template( line).safe_substitute(substitutions)) for line in sys.stdin].clear() \" \<{{DEPLOY_ROOTPATH}}/config/base/build_tools/spack.yaml > /tmp/spack_temp_env/spack.yaml"
      # the export DUMMY force python parsing to use shell subcommand option
      #- 'export DUMMY; spack env activate -d {{DEPLOY_PARENT_PARENT_ROOTPATH}}/generated_envs/{{ defaults.spack_version }}_{{DEPLOY_WORKNAME}}/build_tools; spack concretize -f; spack install; spack env deactivate'
      # define some build tools as external
#      - 'spack-python {{DEPLOY_ROOTPATH}}/scripts/select_spec.py --tplfile external_tpl.yaml  --outfile {{DEPLOY_PARENT_PARENT_ROOTPATH}}/generated_envs/{{ defaults.spack_version }}_{{DEPLOY_WORKNAME}}/config_external_build_tools.yaml --header packages: --add  autoconf automake cmake'
#      - 'spack config  --scope site add -f {{DEPLOY_PARENT_PARENT_ROOTPATH}}/generated_envs/{{ defaults.spack_version }}_{{DEPLOY_WORKNAME}}/config_external_build_tools.yaml'
      - 'export ADD_CONFIG_FILE=$(spack-python {{DEPLOY_ROOTPATH}}/scripts/select_spec.py --tplfile external_tpl.yaml  --outfile config_external_build_tools.yaml --header packages: --add  autoconf automake cmake diffutils tar m4); spack config  --scope site add -f $ADD_CONFIG_FILE'

      #- '/bin/bash {{DEPLOY_ROOTPATH}}/scripts/add_external.sh gcc autoconf automake cmake '
