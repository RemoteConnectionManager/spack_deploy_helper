common_build:
  build_commands:
    - 'spack env activate -d @{GENERATED_ENV_FOLDER}'
    - 'if (echo "$@"  | fgrep -q -w "concretize"); then'
    - '  echo "Concretizing"'
    - '  spack concretize'
    - 'fi'
    - 'if (echo "$@"  | fgrep -q -w "fetch"); then'
    - '  echo "Fetching"'
    - '  spack fetch --deprecated'
    - 'fi'
    - 'if (echo "$@"  | fgrep -q -w "install"); then'
    - '  echo "Concretizing again to be sure"'
    - '  spack concretize -f'
    - '  echo "Install"'
    - '  spack install '
    - 'fi'
    - 'spack env deactivate'



base_env:
  pre_commands:
    - 'if (echo "$@"  | fgrep -q -w "install"); then'
    - '  echo "Skipping PRE Phase "'
    - 'else'
    - '  if [ -f  @{GENERATED_ENV_FOLDER}/spack.lock ]; then'
    - '    echo "FOUND @{GENERATED_ENV_FOLDER}/spack.lock "'
    - '    elif cmp --silent -- @{GENERATED_ENV_FOLDER}/spack.yaml @{GENERATED_ENV_FOLDER}/spack.yaml.old ; then'
    - '      echo "Files:  @{GENERATED_ENV_FOLDER}/spack.yaml @{GENERATED_ENV_FOLDER}/spack.yaml.old are identical"'
    - '      echo "Skipping concretization and install, remove spack.lock to fetch"'
    - '  else'
    - '    spack env activate -d @{GENERATED_ENV_FOLDER}'
    - '    echo "Concretizing"'
    - '    spack concretize -f'
    - '    echo "Fetching"'
    - '    spack fetch --deprecated'
    - '    cp @{GENERATED_ENV_FOLDER}/spack.yaml @{GENERATED_ENV_FOLDER}/spack.yaml.old'
    - '    spack env deactivate'
    - '  fi'
    - 'fi'
  build_commands: '@REF{common_build.build_commands}'
  execute_at_end: True
  separate_files: False
  immediate: none


misc: '@REF{base_env}'




