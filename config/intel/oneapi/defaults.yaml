defaults:
  config_setup:
    spack_commands:
      # install intel-oneapi-compilers and libraries
      - '/bin/bash  {{DEPLOY_ROOTPATH}}/config/intel/oneapi/build.sh {{DEPLOY_PARENT_PARENT_ROOTPATH}}/generated_envs/{{ defaults.spack_version }}_{{DEPLOY_WORKNAME}}/oneapi'
      #- 'spack install intel-oneapi-compilers%gcc'
      # map newly installed intel-oneapi-compilers in the standard intel suggested way: https://software.intel.com/content/www/us/en/develop/documentation/installation-guide-for-intel-oneapi-toolkits-linux/top/installation/install-using-package-managers/spack.html
      #

      - 'export DEPLOY_INTEL_PREFIX=$(spack-python {{DEPLOY_ROOTPATH}}/scripts/select_spec.py --tplfile prefix_tpl.yaml --add intel-oneapi-compilers); spack compiler add --scope site $DEPLOY_INTEL_PREFIX/compiler/latest/linux/bin/intel64; spack compiler add --scope site $DEPLOY_INTEL_PREFIX/compiler/latest/linux/bin'
      # insert a custom compiler mapping mixing old intel for fortran and the new intel-oneapi for the c-cpp stuff
      #- 'touch /tmp/add_compiler.yaml'
      #- 'rm /tmp/add_compiler.yaml'
      #- 'export DEPLOY_INTEL_PREFIX=$(spack location -i intel-oneapi-compilers); export DEPLOY_INTEL_VERSION=$(spack-python -c \"str(sorted([ s.version for s in spack.compilers.all_compiler_specs() if "oneapi" in str(s) ])[0])\"); export DEPLOY_OS=$(spack arch -o); envsubst <{{DEPLOY_ROOTPATH}}/config/intel/oneapi/oneapi_xxx_compiler.yaml  > /tmp/add_compiler.yaml'
      #- 'spack-python  {{DEPLOY_ROOTPATH}}/config/intel/oneapi/configure_compiler.py {{DEPLOY_ROOTPATH}}/config/intel/oneapi/oneapi_xxx_compiler.yaml  /tmp/add_compiler.yaml'
      #- 'spack config  --scope site add -f /tmp/add_compiler.yaml'
      #  with system gcc ( now is the only one gcc compiler) nstall intel-oneapi-<component> : mpi mkl and tbb as a dep 
      #- 'spack install intel-oneapi-mpi%gcc'
      #- 'spack install intel-oneapi-mkl%gcc'
      #- 'spack install intel-oneapi-vtune%gcc'
      # define installed intel-oneapi-<component>  as external
      - 'spack-python {{DEPLOY_ROOTPATH}}/scripts/select_spec.py --tplfile external_tpl.yaml  --outfile {{DEPLOY_PARENT_PARENT_ROOTPATH}}/generated_envs/{{ defaults.spack_version }}_{{DEPLOY_WORKNAME}}/config_external_oneapi_libs.yaml --header packages: --add  intel-oneapi-mpi intel-oneapi-mkl intel-oneapi-tbb intel-oneapi-vtune'
      - 'spack config  --scope site add -f {{DEPLOY_PARENT_PARENT_ROOTPATH}}/generated_envs/{{ defaults.spack_version }}_{{DEPLOY_WORKNAME}}/config_external_oneapi_libs.yaml'
      #- '/bin/bash {{DEPLOY_ROOTPATH}}/scripts/add_external.sh oneapi intel-oneapi-mpi intel-oneapi-mkl intel-oneapi-tbb intel-oneapi-vtune'
      # define some build tools as external
      #- '/bin/bash {{DEPLOY_ROOTPATH}}/scripts/add_external.sh oneapi autoconf automake cmake '

      # generate environments
      - '{{DEPLOY_ROOTPATH}}/envs/build.sh scalar {{DEPLOY_PARENT_PARENT_ROOTPATH}}/generated_envs/{{ defaults.spack_version }}_{{DEPLOY_WORKNAME}} intel intel-oneapi-mkl'
      - '{{DEPLOY_ROOTPATH}}/envs/build.sh scalar {{DEPLOY_PARENT_PARENT_ROOTPATH}}/generated_envs/{{ defaults.spack_version }}_{{DEPLOY_WORKNAME}} oneapi intel-oneapi-mkl'
      - '{{DEPLOY_ROOTPATH}}/envs/build.sh mpi {{DEPLOY_PARENT_PARENT_ROOTPATH}}/generated_envs/{{ defaults.spack_version }}_{{DEPLOY_WORKNAME}} intel intel-oneapi-mpi  intel-oneapi-mkl'
      - '{{DEPLOY_ROOTPATH}}/envs/build.sh mpi {{DEPLOY_PARENT_PARENT_ROOTPATH}}/generated_envs/{{ defaults.spack_version }}_{{DEPLOY_WORKNAME}} oneapi intel-oneapi-mpi  intel-oneapi-mkl'
