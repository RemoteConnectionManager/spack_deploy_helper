defaults:
  origin:
#    url: ''
  upstream:
#    url: ''
  integration : 'True'
  origin_update : 'True'
#  upstream_update : 'False'
#  rebase_update : 'False'

argparse:
  subparser:
    GitWorkspaceManager:
      command: 'gitmanager'
      help: 'manage a git working copy from an origin and a clone'
      methods:
        deploy:
          help: 'deploy from origin cloned from upstream, add origin branches and upstream pull requests, tested on github'
          git_dest:
            action: 'store'
            default: "{{ defaults.git_dest_dir }}"
            help: 'Destination (sub) folder, if not abspath, relative to workspace'
          origin:
            action: 'store'
            default: "{{ defaults.origin.url }}"
            help: 'URL of the origin git repo being cloned.'
          upstream:
            action: 'store'
            default: "{{ defaults.upstream.url }}"
            help: 'URL of the upstream git repo.'
          origin_master:
            action: 'store'
            default: "{{ defaults.origin.master }}"
            help: 'name of the branch that will be created.'
          upstream_master :
            action: 'store'
            default: "{{ defaults.upstream.master }}"
            help: 'upstream branch to sync with.'
          branches :
            action: 'store'
            help: 'Regular expressions of origin branches to fetch.  The first one specified will be the upstream clean copy.'
            default : '{{ defaults.origin.branches }}'
          prlist :
            action: 'store'
            help: 'Regular expressions of upstream pr to fetch and merge.'
            default : '{{ defaults.upstream.prs }}'
          pull_flags :
            action: 'store'
            help: 'flags to use when pull.'
            default : "{{ defaults.origin.pull_flags }}"
          origin_update :
            action: 'store_true'
            default : '{{ defaults.origin_update }}'
            help: 'update existing checkout from origin'
          upstream_update :
            action: 'store_true'
            default : '{{ defaults.upstream_update }}'
            help: 'update first branch (upstream/master/clean) from upstream and check that all branches can be merged but do not actually merge them'
          rebase_update :
            action: 'store_true'
            default : '{{ defaults.rebase_update }}'
            help: 'all the origin branches fetched will be rebased from the clean upstream'
          integration :
            action: 'store_true'
            default : "{{ defaults.integration }}"
            help : 'do upstream integration'


logging_configs:
  loggers:
    plugin.GitWorkspaceManager:
      level: INFO
      handlers: [console_bare]
      propagate: False

    plugin.GitWorkspaceManager.run.input:
      level: INFO
      handlers: [console_colored_in]
      propagate: False
    plugin.GitWorkspaceManager.run.output:
      level: INFO
      handlers: [console_colored_out]
      propagate: False
    plugin.GitWorkspaceManager.run.error:
      level: INFO
      handlers: [console_colored_err]
      propagate: False
