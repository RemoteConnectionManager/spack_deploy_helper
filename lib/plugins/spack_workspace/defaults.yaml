

defaults:
  cache : '../cache'
  linkcache : '../../cache'
  install : 'install'
  modules : 'modules'
  linkinstall : '../../install'
  git_dest_dir : 'spack'
  origin :
    master : 'develop'
    branches :
      - 'clean/develop'
    pull_flags :
      - 'ff-only'
  upstream :
    url : 'https://github.com/LLNL/spack.git'
    master : 'develop'
    prs : []



argparse:
  subparser:
    SpackWorkspaceManager:
      command: 'spackmanager'
      help: 'manage a spack instance'
      config:
        spack_yaml_files :
          - 'packages.yaml'
          - 'modules.yaml'
          - 'compilers.yaml'
          - 'config.yaml'
          - 'mirrors.yaml'

      methods:
        folder_setup:
        config_setup:
          cache:
            action: 'store'
            default: "{{ defaults.cache }}"
            help: 'folder where cache is, if start with / considered absolute, otherwise considered relative to workdir'
          install:
            action: 'store'
            default: "{{ defaults.install }}"
            help: 'folder where install packages, if start with / considered absolute, otherwise considered relative to workdir'
          modules:
            action: 'store'
            default: "{{ defaults.modules }}"
            help: 'folder where put tcl modules, if start with / considered absolute, otherwise considered relative to dest'

          spack_root:
            action: 'store'
            default: "{{ defaults.git_dest_dir }}"
            help: 'folder where is spack instance (cloned) if start with / considered absolute, otherwise considered relative to workdir'
          clearconfig :
            action: 'store_true'
            default : "{{ defaults.clearconfig }}"
            help: 'clear existing spack configurations'
          platformconfig :
            action: 'store_true'
            default : "{{ defaults.platformconfig }}"
            help: 'search for host platform specific configuration'
          runconfig :
            action: 'store_true'
            default : "{{ defaults.runconfig }}"
            help: 'run config.sh files present in config folders'


logging_configs:
  loggers:
    plugin.SpackWorkspaceManager:
      level: INFO
      handlers: [console_bare]
      propagate: False

    plugin.SpackWorkspaceManager.run.input:
      level: INFO
      handlers: [console_colored_in]
      propagate: False
    plugin.SpackWorkspaceManager.run.output:
      level: INFO
      handlers: [console_colored_out]
      propagate: False
    plugin.SpackWorkspaceManager.run.error:
      level: INFO
      handlers: [console_colored_err]
      propagate: False
